on:
  workflow_dispatch:
    inputs:
      packages:
        description: "Which images to build. Default 'all'. Options: 'all', 'workbench', 'package-manager', 'connct'"
        required: true
        default: "all"
      version:
        description: "The version to build. Default 'auto'. Can use any string, but must have which != 'all' if using something other than 'auto'"
        required: false
        default: "auto"
      os:
        description: "The os to build. Default 'all'. Options: 'all', 'bionic', 'jammy'"
        required: true
        default: "all"
      types:
        description: "The types to build. Default 'preview daily' . Options: 'preview', 'daily'"
        required: false
        default: "preview daily"

name: build,test,push (webhook) V2
jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2

      - uses: extractions/setup-just@v1
      
      - name: Set Matrix
        id: set-matrix
        run: |
          MATRIX=`just getmatrix --types ${{ github.event.inputs.types }} --os ${{ github.event.inputs.os }} --packages ${{ github.event.inputs.packages }} | jq -Mcr`
          echo "Raw Matrix: $MATRIX"
          echo "::set-output name=matrix::$MATRIX"

  build:
    runs-on: "ubuntu-latest"
    needs: matrix
    name: build-${{matrix.config.package}}-${{matrix.config.os}}-${{matrix.config.type}}

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2

      - uses: extractions/setup-just@v1

      - uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Images (just)
        id: build-images
        run: |
          TAGS=`just build ${{ matrix.config.type }} ${{ matrix.config.package }} ${{ matrix.config.os }} ${{ steps.buildx.outputs.name }}`
          echo "::set-output name=tags::$TAGS"

      - name: Show Image Sizes
        run: |
          docker image ls

      - name: Test Images (just)
        id: test-images
        env:
          RSC_LICENSE: ${{ secrets.RSC_LICENSE }}
          RSPM_LICENSE: ${{ secrets.RSPM_LICENSE }}
          RSW_LICENSE: ${{ secrets.RSW_LICENSE }}
        run: |
          just test-image ${{ matrix.config.type }} ${{ matrix.config.package }} ${{ steps.build-images.outputs.tags }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.BUILD_PAT }}

      - name: Push Images (just)
        id: push-images
        run: |
          just push-images ${{ steps.build-images.outputs.tags }}
