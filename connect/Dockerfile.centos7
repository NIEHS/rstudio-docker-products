ARG R_VERSION=3.6.2
FROM rstudio/r-base:${R_VERSION}-centos7
LABEL maintainer="RStudio Docker <docker@rstudio.com>"

RUN localedef -i en_US -f UTF-8 en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

RUN yum update -y \
    && yum install -y \
        bzip2 \
        ca-certificates \
        gdal-bin \
        gdebi-core \
        git \
        gsfonts \
        imagemagick \
        libcairo2-dev \
        libcurl4-openssl-dev \
        libfontconfig1-dev \
        libfreetype6-dev \
        libfribidi-dev \
        libgdal-dev \
        libgeos-dev \
        libgl1-mesa-dev \
        libglib2.0-0 \
        libglpk-dev \
        libglu1-mesa-dev \
        libgmp3-dev \
        libharfbuzz-dev \
        libicu-dev \
        libjpeg-dev \
        libmagick++-dev \
        libmysqlclient-dev \
        libpng-dev \
        libproj-dev \
        libsm6 \
        libsodium-dev \
        libssh2-1-dev \
        libtiff-dev \
        libudunits2-dev \
        libv8-dev \
        libxext6 \
        libxml2-dev \
        libxrender1 \
        make \
        perl \
        sudo \
        tcl \
        tk \
        tk-dev \
        tk-table \
        unixodbc-dev \
        wget \
        zlib1g-dev \
    && yum clean all

# Add another R version
ARG R_VERSION_ALT=4.1.0
RUN curl -O https://cdn.rstudio.com/r/centos-7/pkgs/R-${R_VERSION_ALT}-1-1.x86_64.rpm && \
    yum install -y R-${R_VERSION_ALT}-1-1.x86_64.rpm && \
    yum clean all && \
    rm -rf R-${R_VERSION_ALT}-1-1.x86_64.rpm

RUN ln -s /opt/R/${R_VERSION_ALT}/bin/R /usr/local/bin/R && \
    ln -s /opt/R/${R_VERSION_ALT}/bin/Rscript /usr/local/bin/Rscript

# Install Python

ARG PYTHON_VERSION=3.9.5
RUN curl -O https://repo.anaconda.com/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh && \
    bash Miniconda3-4.7.12.1-Linux-x86_64.sh -bp /opt/python/${PYTHON_VERSION} && \
    /opt/python/${PYTHON_VERSION}/bin/conda install -y python==${PYTHON_VERSION} && \
    /opt/python/${PYTHON_VERSION}/bin/pip install \
        ipykernel \
        virtualenv \
        && \
    rm -rf Miniconda3-*-Linux-x86_64.sh && \
    /opt/python/${PYTHON_VERSION}/bin/python -m ipykernel install --name py${PYTHON_VERSION} --display-name "Python ${PYTHON_VERSION}"

# Install another Python
ARG PYTHON_VERSION_ALT=3.8.10
RUN curl -O https://repo.anaconda.com/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh && \
    bash Miniconda3-4.7.12.1-Linux-x86_64.sh -bp /opt/python/${PYTHON_VERSION_ALT} && \
    /opt/python/${PYTHON_VERSION_ALT}/bin/conda install -y python==${PYTHON_VERSION_ALT} && \
    /opt/python/${PYTHON_VERSION_ALT}/bin/pip install \
        ipykernel \
        virtualenv \
        && \
    rm -rf Miniconda3-*-Linux-x86_64.sh && \
    /opt/python/${PYTHON_VERSION_ALT}/bin/python -m ipykernel install --name py${PYTHON_VERSION_ALT} --display-name "Python ${PYTHON_VERSION_ALT}"

# Runtime settings ------------------------------------------------------------#
ARG TINI_VERSION=0.18.0
RUN curl -L -o /usr/local/bin/tini https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini && \
    chmod +x /usr/local/bin/tini

COPY --chmod=0775 startup.sh /usr/local/bin/startup.sh

ARG RSC_VERSION=2022.08.0
SHELL [ "/bin/bash", "-o", "pipefail", "-c"]
RUN yum update -y \
    && RSC_VERSION_URL=`echo -n "${RSC_VERSION}" | sed 's/+/%2B/g'` \
    && curl -L -o rstudio-connect.rpm https://cdn.rstudio.com/connect/$(echo $RSC_VERSION | sed -r 's/([0-9]+\.[0-9]+).*/\1/')/rstudio-connect-${RSC_VERSION_URL}.el7.x86_64.rpm \
    && yum install -y rstudio-connect.rpm \
    && rm rstudio-connect.rpm \
    && yum clean all

EXPOSE 3939/tcp
ENV RSC_LICENSE ""
ENV RSC_LICENSE_SERVER ""
COPY rstudio-connect.gcfg /etc/rstudio-connect/rstudio-connect.gcfg
VOLUME ["/data"]

ENTRYPOINT ["tini", "--"]
CMD ["/usr/local/bin/startup.sh"]
